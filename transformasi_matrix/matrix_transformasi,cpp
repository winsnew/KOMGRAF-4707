#include <iostream>
#include <cmath>

class Matrix {
public:
    float matrix[4][4];

    // Konstruktor untuk inisialisasi matriks identitas
    Matrix() {
        for (int i = 0; i < 4; ++i) {
            for (int j = 0; j < 4; ++j) {
                if (i == j) {
                    matrix[i][j] = 1.0f;
                } else {
                    matrix[i][j] = 0.0f;
                }
            }
        }
    }

    // Fungsi untuk menampilkan matriks
    void displayMatrix() {
        for (int i = 0; i < 4; ++i) {
            for (int j = 0; j < 4; ++j) {
                std::cout << matrix[i][j] << " ";
            }
            std::cout << std::endl;
        }
    }
};

// Fungsi untuk melakukan translasi
Matrix translate(float tx, float ty, float tz) {
    Matrix translationMatrix;

    translationMatrix.matrix[0][3] = tx;
    translationMatrix.matrix[1][3] = ty;
    translationMatrix.matrix[2][3] = tz;

    return translationMatrix;
}

int main() {
    // Misalkan kita ingin translasi sebesar (2, 3, 1)
    float translationX = 2.0f;
    float translationY = 3.0f;
    float translationZ = 1.0f;

    // Membuat matriks translasi
    Matrix translationMatrix = translate(translationX, translationY, translationZ);

    // Menampilkan hasil matriks translasi
    std::cout << "Matrix Translasi:" << std::endl;
    translationMatrix.displayMatrix();

    return 0;
}
